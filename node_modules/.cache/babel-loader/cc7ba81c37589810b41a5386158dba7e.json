{"ast":null,"code":"var Chart = require(\"chart.js\"); //\n// Chart extension for making the bars rounded\n// Code from: https://codepen.io/jedtrow/full/ygRYgo\n//\n\n\nChart.elements.Rectangle.prototype.draw = function () {\n  var ctx = this._chart.ctx;\n  var vm = this._view;\n  var left, right, top, bottom, signX, signY, borderSkipped, radius;\n  var borderWidth = vm.borderWidth; // Set Radius Here\n  // If radius is large enough to cause drawing errors a max radius is imposed\n\n  var cornerRadius = 6; // Canvas doesn't allow us to stroke inside the width so we can\n  // adjust the sizes to fit if we're setting a stroke on the line\n\n  ctx.beginPath();\n  ctx.fillStyle = vm.backgroundColor;\n  ctx.strokeStyle = vm.borderColor;\n  ctx.lineWidth = borderWidth; // Corner points, from bottom-left to bottom-right clockwise\n  // | 1 2 |\n  // | 0 3 |\n\n  var corners = [[left, bottom], [left, top], [right, top], [right, bottom]]; // Find first (starting) corner with fallback to 'bottom'\n\n  var borders = [\"bottom\", \"left\", \"top\", \"right\"];\n  var startCorner = borders.indexOf(borderSkipped, 0);\n\n  if (startCorner === -1) {\n    startCorner = 0;\n  }\n\n  function cornerAt(index) {\n    return corners[(startCorner + index) % 4];\n  } // Draw rectangle from 'startCorner'\n\n\n  var corner = cornerAt(0);\n  ctx.moveTo(corner[0], corner[1]);\n\n  for (var i = 1; i < 4; i++) {\n    corner = cornerAt(i);\n    var nextCornerId = i + 1;\n\n    if (nextCornerId === 4) {\n      nextCornerId = 0;\n    } // let nextCorner = cornerAt(nextCornerId);\n\n\n    var width = corners[2][0] - corners[1][0];\n    var height = corners[0][1] - corners[1][1];\n    var x = corners[1][0];\n    var y = corners[1][1]; // eslint-disable-next-line\n\n    var radius = cornerRadius; // Fix radius being too large\n\n    if (radius > height / 2) {\n      radius = height / 2;\n    }\n\n    if (radius > width / 2) {\n      radius = width / 2;\n    }\n\n    ctx.moveTo(x + radius, y);\n    ctx.lineTo(x + width - radius, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n    ctx.lineTo(x + width, y + height - radius);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n    ctx.lineTo(x + radius, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n  }\n\n  ctx.fill();\n\n  if (borderWidth) {\n    ctx.stroke();\n  }\n};\n\nvar mode = \"light\"; //(themeMode) ? themeMode : 'light';\n\nvar fonts = {\n  base: \"Open Sans\"\n}; // Colors\n\nvar colors = {\n  gray: {\n    100: \"#f6f9fc\",\n    200: \"#e9ecef\",\n    300: \"#dee2e6\",\n    400: \"#ced4da\",\n    500: \"#adb5bd\",\n    600: \"#8898aa\",\n    700: \"#525f7f\",\n    800: \"#32325d\",\n    900: \"#212529\"\n  },\n  theme: {\n    default: \"#172b4d\",\n    primary: \"#5e72e4\",\n    secondary: \"#f4f5f7\",\n    info: \"#11cdef\",\n    success: \"#2dce89\",\n    danger: \"#f5365c\",\n    warning: \"#fb6340\"\n  },\n  black: \"#12263F\",\n  white: \"#FFFFFF\",\n  transparent: \"transparent\"\n}; // Methods\n// Chart.js global options\n\nfunction chartOptions() {\n  // Options\n  var options = {\n    defaults: {\n      global: {\n        responsive: true,\n        maintainAspectRatio: false,\n        defaultColor: mode === \"dark\" ? colors.gray[700] : colors.gray[600],\n        defaultFontColor: mode === \"dark\" ? colors.gray[700] : colors.gray[600],\n        defaultFontFamily: fonts.base,\n        defaultFontSize: 13,\n        layout: {\n          padding: 0\n        },\n        legend: {\n          display: false,\n          position: \"bottom\",\n          labels: {\n            usePointStyle: true,\n            padding: 16\n          }\n        },\n        elements: {\n          point: {\n            radius: 0,\n            backgroundColor: colors.theme[\"primary\"]\n          },\n          line: {\n            tension: 0.4,\n            borderWidth: 4,\n            borderColor: colors.theme[\"primary\"],\n            backgroundColor: colors.transparent,\n            borderCapStyle: \"rounded\"\n          },\n          rectangle: {\n            backgroundColor: colors.theme[\"warning\"]\n          },\n          arc: {\n            backgroundColor: colors.theme[\"primary\"],\n            borderColor: mode === \"dark\" ? colors.gray[800] : colors.white,\n            borderWidth: 4\n          }\n        },\n        tooltips: {\n          enabled: true,\n          mode: \"index\",\n          intersect: false\n        }\n      },\n      doughnut: {\n        cutoutPercentage: 83,\n        legendCallback: function legendCallback(chart) {\n          var data = chart.data;\n          var content = \"\";\n          data.labels.forEach(function (label, index) {\n            var bgColor = data.datasets[0].backgroundColor[index];\n            content += '<span class=\"chart-legend-item\">';\n            content += '<i class=\"chart-legend-indicator\" style=\"background-color: ' + bgColor + '\"></i>';\n            content += label;\n            content += \"</span>\";\n          });\n          return content;\n        }\n      }\n    }\n  }; // yAxes\n\n  Chart.scaleService.updateScaleDefaults(\"linear\", {\n    gridLines: {\n      borderDash: [2],\n      borderDashOffset: [2],\n      color: mode === \"dark\" ? colors.gray[900] : colors.gray[300],\n      drawBorder: false,\n      drawTicks: false,\n      lineWidth: 0,\n      zeroLineWidth: 0,\n      zeroLineColor: mode === \"dark\" ? colors.gray[900] : colors.gray[300],\n      zeroLineBorderDash: [2],\n      zeroLineBorderDashOffset: [2]\n    },\n    ticks: {\n      beginAtZero: true,\n      padding: 10,\n      callback: function callback(value) {\n        if (!(value % 10)) {\n          return value;\n        }\n      }\n    }\n  }); // xAxes\n\n  Chart.scaleService.updateScaleDefaults(\"category\", {\n    gridLines: {\n      drawBorder: false,\n      drawOnChartArea: false,\n      drawTicks: false\n    },\n    ticks: {\n      padding: 20\n    }\n  });\n  return options;\n} // Parse global options\n\n\nfunction parseOptions(parent, options) {\n  for (var item in options) {\n    if (typeof options[item] !== \"object\") {\n      parent[item] = options[item];\n    } else {\n      parseOptions(parent[item], options[item]);\n    }\n  }\n} // Example 1 of Chart inside src/views/Index.js (Sales value - Card)\n\n\nvar chartExample1 = {\n  options: {\n    scales: {\n      yAxes: [{\n        gridLines: {\n          color: colors.gray[900],\n          zeroLineColor: colors.gray[900]\n        },\n        ticks: {\n          callback: function callback(value) {\n            if (!(value % 10)) {\n              return \"$\" + value + \"k\";\n            }\n          }\n        }\n      }]\n    },\n    tooltips: {\n      callbacks: {\n        label: function label(item, data) {\n          var label = data.datasets[item.datasetIndex].label || \"\";\n          var yLabel = item.yLabel;\n          var content = \"\";\n\n          if (data.datasets.length > 1) {\n            content += label;\n          }\n\n          content += \"$\" + yLabel + \"k\";\n          return content;\n        }\n      }\n    }\n  },\n  data1: function data1(canvas) {\n    return {\n      labels: [\"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n      datasets: [{\n        label: \"Performance\",\n        data: [0, 20, 10, 30, 15, 40, 20, 60, 60]\n      }]\n    };\n  },\n  data2: function data2(canvas) {\n    return {\n      labels: [\"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n      datasets: [{\n        label: \"Performance\",\n        data: [0, 20, 5, 25, 10, 30, 15, 40, 40]\n      }]\n    };\n  }\n}; // Example 2 of Chart inside src/views/Index.js (Total orders - Card)\n\nvar chartExample2 = {\n  options: {\n    scales: {\n      yAxes: [{\n        ticks: {\n          callback: function callback(value) {\n            if (!(value % 10)) {\n              //return '$' + value + 'k'\n              return value;\n            }\n          }\n        }\n      }]\n    },\n    tooltips: {\n      callbacks: {\n        label: function label(item, data) {\n          var label = data.datasets[item.datasetIndex].label || \"\";\n          var yLabel = item.yLabel;\n          var content = \"\";\n\n          if (data.datasets.length > 1) {\n            content += label;\n          }\n\n          content += yLabel;\n          return content;\n        }\n      }\n    }\n  },\n  data: {\n    labels: [\"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n    datasets: [{\n      label: \"Sales\",\n      data: [25, 20, 30, 22, 17, 29],\n      maxBarThickness: 10\n    }]\n  }\n};\nmodule.exports = {\n  chartOptions,\n  // used inside src/views/Index.js\n  parseOptions,\n  // used inside src/views/Index.js\n  chartExample1,\n  // used inside src/views/Index.js\n  chartExample2 // used inside src/views/Index.js\n\n};","map":{"version":3,"sources":["C:/Users/mcbri/OneDrive/Desktop/argon-dashboard-react-master/argon-dashboard-react-master/src/variables/charts.js"],"names":["Chart","require","elements","Rectangle","prototype","draw","ctx","_chart","vm","_view","left","right","top","bottom","signX","signY","borderSkipped","radius","borderWidth","cornerRadius","beginPath","fillStyle","backgroundColor","strokeStyle","borderColor","lineWidth","corners","borders","startCorner","indexOf","cornerAt","index","corner","moveTo","i","nextCornerId","width","height","x","y","lineTo","quadraticCurveTo","fill","stroke","mode","fonts","base","colors","gray","theme","default","primary","secondary","info","success","danger","warning","black","white","transparent","chartOptions","options","defaults","global","responsive","maintainAspectRatio","defaultColor","defaultFontColor","defaultFontFamily","defaultFontSize","layout","padding","legend","display","position","labels","usePointStyle","point","line","tension","borderCapStyle","rectangle","arc","tooltips","enabled","intersect","doughnut","cutoutPercentage","legendCallback","chart","data","content","forEach","label","bgColor","datasets","scaleService","updateScaleDefaults","gridLines","borderDash","borderDashOffset","color","drawBorder","drawTicks","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","ticks","beginAtZero","callback","value","drawOnChartArea","parseOptions","parent","item","chartExample1","scales","yAxes","callbacks","datasetIndex","yLabel","length","data1","canvas","data2","chartExample2","maxBarThickness","module","exports"],"mappings":"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","sourcesContent":["\nconst Chart = require(\"chart.js\");\n//\n// Chart extension for making the bars rounded\n// Code from: https://codepen.io/jedtrow/full/ygRYgo\n//\n\nChart.elements.Rectangle.prototype.draw = function() {\n  var ctx = this._chart.ctx;\n  var vm = this._view;\n  var left, right, top, bottom, signX, signY, borderSkipped, radius;\n  var borderWidth = vm.borderWidth;\n  // Set Radius Here\n  // If radius is large enough to cause drawing errors a max radius is imposed\n  var cornerRadius = 6;\n\n  \n  // Canvas doesn't allow us to stroke inside the width so we can\n  // adjust the sizes to fit if we're setting a stroke on the line\n  \n\n  ctx.beginPath();\n  ctx.fillStyle = vm.backgroundColor;\n  ctx.strokeStyle = vm.borderColor;\n  ctx.lineWidth = borderWidth;\n\n  // Corner points, from bottom-left to bottom-right clockwise\n  // | 1 2 |\n  // | 0 3 |\n  var corners = [[left, bottom], [left, top], [right, top], [right, bottom]];\n\n  // Find first (starting) corner with fallback to 'bottom'\n  var borders = [\"bottom\", \"left\", \"top\", \"right\"];\n  var startCorner = borders.indexOf(borderSkipped, 0);\n  if (startCorner === -1) {\n    startCorner = 0;\n  }\n\n  function cornerAt(index) {\n    return corners[(startCorner + index) % 4];\n  }\n\n  // Draw rectangle from 'startCorner'\n  var corner = cornerAt(0);\n  ctx.moveTo(corner[0], corner[1]);\n\n  for (var i = 1; i < 4; i++) {\n    corner = cornerAt(i);\n    let nextCornerId = i + 1;\n    if (nextCornerId === 4) {\n      nextCornerId = 0;\n    }\n\n    // let nextCorner = cornerAt(nextCornerId);\n\n    let width = corners[2][0] - corners[1][0];\n    let height = corners[0][1] - corners[1][1];\n    let x = corners[1][0];\n    let y = corners[1][1];\n    // eslint-disable-next-line\n    var radius: any = cornerRadius;\n\n    // Fix radius being too large\n    if (radius > height / 2) {\n      radius = height / 2;\n    }\n    if (radius > width / 2) {\n      radius = width / 2;\n    }\n\n    ctx.moveTo(x + radius, y);\n    ctx.lineTo(x + width - radius, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n    ctx.lineTo(x + width, y + height - radius);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n    ctx.lineTo(x + radius, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n  }\n\n  ctx.fill();\n  if (borderWidth) {\n    ctx.stroke();\n  }\n};\n\nvar mode = \"light\"; //(themeMode) ? themeMode : 'light';\nvar fonts = {\n  base: \"Open Sans\"\n};\n\n// Colors\nvar colors = {\n  gray: {\n    100: \"#f6f9fc\",\n    200: \"#e9ecef\",\n    300: \"#dee2e6\",\n    400: \"#ced4da\",\n    500: \"#adb5bd\",\n    600: \"#8898aa\",\n    700: \"#525f7f\",\n    800: \"#32325d\",\n    900: \"#212529\"\n  },\n  theme: {\n    default: \"#172b4d\",\n    primary: \"#5e72e4\",\n    secondary: \"#f4f5f7\",\n    info: \"#11cdef\",\n    success: \"#2dce89\",\n    danger: \"#f5365c\",\n    warning: \"#fb6340\"\n  },\n  black: \"#12263F\",\n  white: \"#FFFFFF\",\n  transparent: \"transparent\"\n};\n\n// Methods\n\n// Chart.js global options\nfunction chartOptions() {\n  // Options\n  var options = {\n    defaults: {\n      global: {\n        responsive: true,\n        maintainAspectRatio: false,\n        defaultColor: mode === \"dark\" ? colors.gray[700] : colors.gray[600],\n        defaultFontColor: mode === \"dark\" ? colors.gray[700] : colors.gray[600],\n        defaultFontFamily: fonts.base,\n        defaultFontSize: 13,\n        layout: {\n          padding: 0\n        },\n        legend: {\n          display: false,\n          position: \"bottom\",\n          labels: {\n            usePointStyle: true,\n            padding: 16\n          }\n        },\n        elements: {\n          point: {\n            radius: 0,\n            backgroundColor: colors.theme[\"primary\"]\n          },\n          line: {\n            tension: 0.4,\n            borderWidth: 4,\n            borderColor: colors.theme[\"primary\"],\n            backgroundColor: colors.transparent,\n            borderCapStyle: \"rounded\"\n          },\n          rectangle: {\n            backgroundColor: colors.theme[\"warning\"]\n          },\n          arc: {\n            backgroundColor: colors.theme[\"primary\"],\n            borderColor: mode === \"dark\" ? colors.gray[800] : colors.white,\n            borderWidth: 4\n          }\n        },\n        tooltips: {\n          enabled: true,\n          mode: \"index\",\n          intersect: false\n        }\n      },\n      doughnut: {\n        cutoutPercentage: 83,\n        legendCallback: function(chart) {\n          var data = chart.data;\n          var content = \"\";\n\n          data.labels.forEach(function(label, index) {\n            var bgColor = data.datasets[0].backgroundColor[index];\n\n            content += '<span class=\"chart-legend-item\">';\n            content +=\n              '<i class=\"chart-legend-indicator\" style=\"background-color: ' +\n              bgColor +\n              '\"></i>';\n            content += label;\n            content += \"</span>\";\n          });\n\n          return content;\n        }\n      }\n    }\n  };\n\n  // yAxes\n  Chart.scaleService.updateScaleDefaults(\"linear\", {\n    gridLines: {\n      borderDash: [2],\n      borderDashOffset: [2],\n      color: mode === \"dark\" ? colors.gray[900] : colors.gray[300],\n      drawBorder: false,\n      drawTicks: false,\n      lineWidth: 0,\n      zeroLineWidth: 0,\n      zeroLineColor: mode === \"dark\" ? colors.gray[900] : colors.gray[300],\n      zeroLineBorderDash: [2],\n      zeroLineBorderDashOffset: [2]\n    },\n    ticks: {\n      beginAtZero: true,\n      padding: 10,\n      callback: function(value) {\n        if (!(value % 10)) {\n          return value;\n        }\n      }\n    }\n  });\n\n  // xAxes\n  Chart.scaleService.updateScaleDefaults(\"category\", {\n    gridLines: {\n      drawBorder: false,\n      drawOnChartArea: false,\n      drawTicks: false\n    },\n    ticks: {\n      padding: 20\n    }\n  });\n\n  return options;\n}\n\n// Parse global options\nfunction parseOptions(parent, options) {\n  for (var item in options) {\n    if (typeof options[item] !== \"object\") {\n      parent[item] = options[item];\n    } else {\n      parseOptions(parent[item], options[item]);\n    }\n  }\n}\n\n// Example 1 of Chart inside src/views/Index.js (Sales value - Card)\nlet chartExample1 = {\n  options: {\n    scales: {\n      yAxes: [\n        {\n          gridLines: {\n            color: colors.gray[900],\n            zeroLineColor: colors.gray[900]\n          },\n          ticks: {\n            callback: function(value) {\n              if (!(value % 10)) {\n                return \"$\" + value + \"k\";\n              }\n            }\n          }\n        }\n      ]\n    },\n    tooltips: {\n      callbacks: {\n        label: function(item, data) {\n          var label = data.datasets[item.datasetIndex].label || \"\";\n          var yLabel = item.yLabel;\n          var content = \"\";\n\n          if (data.datasets.length > 1) {\n            content += label;\n          }\n\n          content += \"$\" + yLabel + \"k\";\n          return content;\n        }\n      }\n    }\n  },\n  data1: canvas => {\n    return {\n      labels: [\"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n      datasets: [\n        {\n          label: \"Performance\",\n          data: [0, 20, 10, 30, 15, 40, 20, 60, 60]\n        }\n      ]\n    };\n  },\n  data2: canvas => {\n    return {\n      labels: [\"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n      datasets: [\n        {\n          label: \"Performance\",\n          data: [0, 20, 5, 25, 10, 30, 15, 40, 40]\n        }\n      ]\n    };\n  }\n};\n\n// Example 2 of Chart inside src/views/Index.js (Total orders - Card)\nlet chartExample2 = {\n  options: {\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            callback: function(value) {\n              if (!(value % 10)) {\n                //return '$' + value + 'k'\n                return value;\n              }\n            }\n          }\n        }\n      ]\n    },\n    tooltips: {\n      callbacks: {\n        label: function(item, data) {\n          var label = data.datasets[item.datasetIndex].label || \"\";\n          var yLabel = item.yLabel;\n          var content = \"\";\n          if (data.datasets.length > 1) {\n            content += label;\n          }\n          content += yLabel;\n          return content;\n        }\n      }\n    }\n  },\n  data: {\n    labels: [\"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n    datasets: [\n      {\n        label: \"Sales\",\n        data: [25, 20, 30, 22, 17, 29],\n        maxBarThickness: 10\n      }\n    ]\n  }\n};\n\nmodule.exports = {\n  chartOptions, // used inside src/views/Index.js\n  parseOptions, // used inside src/views/Index.js\n  chartExample1, // used inside src/views/Index.js\n  chartExample2 // used inside src/views/Index.js\n};\n"]},"metadata":{},"sourceType":"module"}